<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.BackgroundImage" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
</root>