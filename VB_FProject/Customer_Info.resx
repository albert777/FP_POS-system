<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="Panel2.BackgroundImage" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        iVBORw0KGgoAAAANSUhEUgAAAGQAAABkCAYAAABw4pVUAAAABGdBTUEAALGPC/xhBQAAAAlwSFlzAAAF
        fgAABX4BPgLDIQAAABl0RVh0U29mdHdhcmUAd3d3Lmlua3NjYXBlLm9yZ5vuPBoAAA4mSURBVHhe7Z0J
        kBxlFcf3vrPZzWZ3k92wd7KbzPbMJhE2CSEJIEe4QRIw3AmEc7PTs+FQ0QqKICEggoKEq4RSqygEi4CU
        WhqBEJKdng2HFBaoARXFglAohxiB9v17u3t6et7Mds98PTu7mVf1q02m3/u+7319fO+7uvOyXfr2BGv8
        kdCiQDi41h+WN0uK/IRfkRW/EnyZ/v6J+Cfxng7+Tb9px0hH3gYbzVYZ7F+oXD1VTzYnTsW/a2AWVeA5
        VJn3UsX+kf6qIgko8ut+JXRPIBI6O/CC3KxnmxOr0FUvaVeyVll8RXrIa5TvdwLDsk8vzoEpC5XgTKqI
        IeIFppLGiz1SWJZ9w1fO0Is5+UVShnroJDxMzn9mq4xsYr8/Ij/oDw9268WefELtwQJydBuRzSfCDsq6
        LRAOzdfdmPjSv2ugmpy6jfhUd3Ii8j9ii++Vy6p0tyagqHn5UkReT47sszg20XnbHw6dC990LyeGIHSl
        qOkpxqHJwpPzR65q0t3NbqH4/gwKY//FODGpgI+SElqlu519sninXK5FJkzhJzOBsHx31+sDpXo1ZIf0
        7hpspEfUTq7ABwg75o8M1OvVMb6CfgUV6A1bAQ9E9o57v6UvHDyUCjKZoqh02dc7HFqiV09mhU7GCirA
        v20FOuDRGvuRwWV6NWVGAsrQUsr8Y3thcph8lLE7xTcSClCG79sKkCOed3sjwbl6tXkjfXuCbX4l+BaT
        eQ6ev80fGWrVq0+stG3fVEYZjNgyzDEGUiQ07HtlU4lejeIEs2xchjmcELxTr0YxgulOPqPxY96vLlZb
        rl+p1p3mVysXzFKLp1eqhdVlanF9lerbfhlrM55Q9LVGr870RO/4fWDPYLzouOt0tXpZp5pfkK9S8Vhm
        bjiMtR1nPki/44ghdEXeziSecXp+foE6ZVErewLsFM+YovY8vlbtffYKNq1xIyL/msqXulCDdD6bcIZp
        v/1UtXBKKVv5SaG7qHxuo9o0tELtfW6ATTvT4PFPZXMvPbsvr6ME3rUnmGnabjtFzS8u5CvcBWUdddpd
        xuWRYd7GWjMqkztBZMAkllHmPHyuWlBRzFZwKpQ0VavzfrmezSuTSErodiqPc+nbs2E2GWIemU0wIwwH
        1fLuBrZi06F6eSefX2bZL4XlDiqPM8nURJPvN5eqbbeepM4cWKpOX7NA7bxntXnsoOuOYStUBJ33nWHm
        0/P4OvWgTceoDev61WmnSRpzfnqOedwr6ITcT2UZW/S7w7MVItLuQbXlWyvVqoMPigtd8Ygy9CrmNcYc
        E0nNyh4zn7ZbToo/fnS3edxD9vt3b2yn/JILKW61GQpj9oNr1LLZ0+MqACBUNfR6tq1jdURRWFmiSvRI
        RF6+316qRWPW4/lFBWrzV49UO+5epUq7Bs1yecBdlF9i0aZiFfkTm5EQ8AhKFi1VL+uI6n7zWFZHJD2P
        RSMuRGCcDiiaVqE2X3OEqSuY/ySd+qXIaiNjlDatm0+MuwrtYAjE0G9cv4jVEQnaLiM/Jx3OhgsOMfVF
        grXElD4vpPB7u0G6zP3FRRS6lrBOWsFJMGzqVvexOiJpuvJwM7/a4+ayOnY6fnCaaSOQEUo7XvqGg32M
        ctpMO6WXdc5O/blfMG0ycUKar4qeENydnI4dBCKGjUgkRZYo/ViRlOAtnHI6oMHMLylinbODcNOwm3Hp
        ElZHJM1fOdLMr+aYblYnDnrsIuAw7ESB/SmUfqxQ+yF8t1LLDcfxjjFYG/WWG49ndUTSfkf08TNlSRur
        w4GAw7ATyKuUdlRGp2ZZxbRoWHsI6xRHUW256g+P2qHd4XREgvkUo5wlM6tZHQ6vGnesh6b0R2V0UySj
        lCZ4DFHyjun+2fmmbXmP+GETAwzJGPnMfeJCVicR1kerULCq3hAKvR5ildKkblWAdSoR1iGLhrX9rI4I
        rO1H1/1nsDqJqDs9YNqKJKAEH6D0R4V++ItdQQSYuaPkHYHOmWGHx4mTUDlV0NkzJq/QE3cz19J48WKz
        nILZS+nTyXhxYwNzUAid965mneKoPWGeaeflwKIBhkWM/DCJxelwtH/vFNNONJiDMlYhsgrpgvGi4oYq
        1jE76K8Yds1XH8HqiMTayavwz2R17GC8zcuxLWkkuDiPIpt13EERYF4bA3mcc3aq+ltNu44fns7qCCM/
        Txv6N/Irqqvk9WwUVpV60g8xwJQ5Tshm7qAImkLLWcc4imoo7NXtfE9frhaUOetQpgIiOCMvXDScTiKs
        AYFoqMd+Iz2yQo9xB0UwU17GOpUIRDyGrWcDjHR3tH33ZDMfNxcNmPW1L5q2wonIjyDCej7ugCCwhopz
        KhEYwjDtqZM46+tHqQWl4u4URFetN51g5oH2oLSlhtVNxOwfnxUto3h2eDLCayDt3OCqF2y/ekFlXzOv
        mwK1J/li0nZ7F5Z1TTdHEzziRZwQT7ejYVq2QnIWxQDcEWjUDfv6sxayeqmAWUAjXSxDxQXA6XFULmjO
        xDKiP+OEeL4lbdY3jmadTIR1ZUjXj77M6rgF07LW8auyOfWsXiI8GlS08w5OyH9tPwpHi2RcXI1Yi9X7
        THQZKB4VnJ4bqpe2W8qzzlV5oAsfDHsP+QQnZL/tR0/A5A7rbAJwVxm2rTefyOo4hio0JoK7eDGvlwCv
        JqYYtBOSkV20HXd+iXU2ERjbMlaGgJqj5rB6Tqg9PjosgzEsRFucXiI6t0aHWTxGe2RlbI85ohzO4URY
        V3tIz29Iaa0WxqmsC63d3h0IKgzbDIBGXXthJHdQONqzm3E6Eeitdz9ynmk/5dB2Vi8Z1rYDEZ/bhdtz
        fnK2aZ8BKOzN4CsxUCGc08lo+fZxpr3bdghUHdJi2muhLqOTDOvyVu8JPuvp0ImdrgfXsE4no21LdP1U
        hb+J1UlGZaDJtE8lOLB3VD0FQycY0GIPegC3jnYsrIsRUpnWRRti2GPjD6eTjMZLlpj2nhMJXp8nReQL
        2IOCwb6M0pZa1umEULg6+6E1ZhrJlnwmwjoTibXFrvofREF5ccxqeU/BvDpeAcEeFAQG8Jo2rtB2yHIO
        JwLzKNa+iLRzQBui53STgdUsGFMz0pl17VGup4extgwj19Z0vGGw39i6xhxMDyySw74PpzOGBpgEQqhp
        HeYAjRelPhxvnwfH3Yo8nE6eGaD/Un/2wphtEyIxt7rRf4QtcsCq8rrVAe1WNxxxQknz1NHNmc9cHptm
        WJ9XcfmoiYFscZfGpEsgL+SJvFm7JFT0ztAGK32/E7YnfnSRA0SKhO5jFFyBqU1t0fIYq9xjIF2sGtQi
        GUuv3KD70fNdrSoci+rDOmK2IZhQ3m23nqxOWdzq+sTjjm68sF97IsSl646tlN6oSJHgWYyCI9BGYIWi
        0zW8AEPs08+cz1cOgdh/6pGz1fzCAtY+HZAmhmGsY1tWuh/FHd7nyh+AE4N+DpemE/DyUEpnVPAedvrx
        c7vSWOCqcNU3oDsCC824nbC9Owa0BteLjZ6JQEiMwIHbwz73qYtGV166ueMJTAnb03LA51iORfZRoR9f
        tSklBU64Wc+E8BNzG/Z0MJyCDZ8pvRhAEIgA0cijLPbydT1wplraNo21Y6ETaJ1gc0bwZbKNFYqBN/HK
        PGi4ycwRmCu3zm8AjFFhcRwmjjib8UB7nFFZ7fPmaPzxCOVsOLS+j4upXuqcX0t2sdKrXNlJBx09tnAl
        Oa1IbauapXB4XNWe6HP9KMg0Ncf2xIbe5MO0k51tPgKYbjBtk/NZwpecBSLyc4xBHE7X7Grbiy3RU+fW
        1Sl17sYL9Duwcsb0nXxxeqfUn3dw1C4Z4dDTpM9LQJEvYY1sYHMNqScFr7HAgjfDBhs/RbyzJNPgMWZd
        OoR3cWFJKadrBeG6YZOc4IWkz4vea/8o3iiWcgcTRe3fjw4K4irLprbCLbiQsHDc8MfJICUm0wz9JHwo
        vXRNLeknFlLaYjOKA3MMpJoQnDBDFz3Z4saxr6hsp6RpakxgMtbIs3UeJhHU97iJdJMLvr9EyknfyYvO
        E8aW8JzksF5NM65YyhZ4ImJ9Ux06r5zvAHWTqNNr4WO8qIHSHVtI+S6bcWpQI4h3IFKSkwL4wg3xpAIF
        UHdQms7EF5G7yCjt1zNhLoOSm1RgToXz1SXOXjxjFb8SuplJyBVYKU5JTSqsLxxIFW3bgVvBB7DI+K/2
        xNygzRK2upwlzGLQh7LOYKbI3oXK+gpKz73gkz5MgjnSgNqOU/XqTUHU7HlN7KQg3dfEQrQvrinyO3GJ
        53DLP4R90lUKB1dSghPpC53Zxqf+SPAIvTrFiF8J3sBklMMB9Ni/Tq9GcUKRQTElvsOeWY4xCIeeXrF9
        U5FejWIFX+ynTF6MyzRHIvbgW8B69Xkj+Eo/ZfSmLeMc8byRsc+z4uv8lOF7tgLkiLJv/sjQPL26MiO5
        z+bxUAOe+c/mGYKrgArhyaudJihvev5ltrEEz0kqyEu2gh1wBBT5haz5pHfu48RZ9HFiQ1Y9vKpQX9vl
        2Yv8s5BPJSV0Ncb89GrIPgkoocOpYfs7U/hJRvAtaVherrud3aINSIblp3hHJgVPZk174UYCkdAJVPi9
        NmcmMn8QPkiYacHQATlyGzGR2xasL9iCWVTdrYkvmAvAO87JsQ8tjmY77yNQcbxcZyLKQmVouh6NZeQd
        KymyD2XUXtt6oAhGjqWIvD7L+i87sNbW8xHabBd8bxePM+J1ppK85jVMvgV2h+boxcmJVRAyB8LBc6ii
        7qWKEv4JjdGTHroHn0DFVIKebU6cCvZu+yOhRdoXHMLyZup0PkEVqxCv6R1Q65esP9B/o6te09kGm9Gv
        Pwz24zGpJ5ulkpf3f8NHkfwJ3UYZAAAAAElFTkSuQmCC
</value>
  </data>
</root>