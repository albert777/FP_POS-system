<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="Panel3.BackgroundImage" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        AAAAAElFTkSuQmCC
</value>
  </data>
  <metadata name="contact_number.UserAddedColumn" type="System.Boolean, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089">
    <value>True</value>
  </metadata>
  <metadata name="fname.UserAddedColumn" type="System.Boolean, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089">
    <value>True</value>
  </metadata>
  <metadata name="lname.UserAddedColumn" type="System.Boolean, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089">
    <value>True</value>
  </metadata>
  <metadata name="gender.UserAddedColumn" type="System.Boolean, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089">
    <value>True</value>
  </metadata>
  <metadata name="birthday.UserAddedColumn" type="System.Boolean, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089">
    <value>True</value>
  </metadata>
  <metadata name="address.UserAddedColumn" type="System.Boolean, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089">
    <value>True</value>
  </metadata>
  <metadata name="status.UserAddedColumn" type="System.Boolean, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089">
    <value>True</value>
  </metadata>
</root>